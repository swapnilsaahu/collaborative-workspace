// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    output   = "../src/generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String           @id @default(uuid())
    email         String           @unique
    name          String
    password      String
    createdAt     DateTime         @default(now()) @map("created_at")
    updatedAt     DateTime         @updatedAt @map("updated_at")
    whitboards    WhiteboardUser[]
    refreshTokens RefreshTokens[]

    @@map("user")
}

model RefreshTokens {
    jti        String  @id
    userId     String
    user       User    @relation(fields: [userId], references: [id])
    deviceInfo String? @map("device_info")
    expiresAt  BigInt  @map("expires_at")
    issuedAt   BigInt  @map("issued_at")
    ipAddress  String? @map("ip_address")
    revoked    Boolean @default(false)

    @@map("refresh_tokens")
}

model Whiteboard {
    id             String           @id @default(uuid())
    name           String
    ydocEncoded    Bytes?           @map("ydoc_encoded")
    createdAt      DateTime         @default(now()) @map("created_at")
    updatedAt      DateTime         @updatedAt @map("updated_at")
    whiteboardCode String?          @unique @map("whiteboard_code")
    users          WhiteboardUser[]

    @@map("whiteboard")
}

model WhiteboardUser {
    userId       String   @map("user_id")
    whiteboardId String   @map("whiteboard_id")
    role         String   @default("editor")
    joinedAt     DateTime @default(now()) @map("joined_at")

    user       User       @relation(fields: [userId], references: [id])
    whiteboard Whiteboard @relation(fields: [whiteboardId], references: [id])

    @@id([userId, whiteboardId])
    @@map("whiteboard_user")
}
